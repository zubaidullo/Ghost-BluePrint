#Ansible Playbook for Subutai Ghost BluePrint
---

- hosts: all
  gather_facts: false
  remote_user: root
  tasks: 

    - name: Update
      raw: aptttttt-get -y --allow-unauthenticated update || true

    - name: Ensure python is available
      raw: test -e /usr/bin/python || apt install -y --allow-unauthenticated python-minimal

    - name: Ensure python-apt is available
      raw: test -d /usr/share/python-apt || apt install -y --allow-unauthenticated python-apt

    - name: Upgrade
      raw: apttttt-get -y --allow-unauthenticated upgrade

- hosts: Ghost
  remote_user: root
  tasks:
 
    - name: Install required debs
      apt: 
        name: "{{ item }}"
        state: present
        allow_unauthenticated: yes
      with_items: 
        - php7.0
        - php7.0-cgi
        - php7.0-mysql
        - php7.0-zip
        - php7.0-dom
        - php7.0-xmlwriter
        - php7.0-xmlreader
        - php7.0-xml
        - php7.0-mbstring
        - php7.0-gd
        - php7.0-curl
        - apache2
        - libapache2-mod-php7.0
        - unzip 
        - mariadb-server
        - python-mysqldb
        - curl 
        - software-properties-common

    # - name: Downloading ghost zip file
    #  get_url:
    #     url: https://ghost.org/zip/ghost-latest.zip 
    #     dest: /tmp/ghost-latest.zip
    #     validate_certs: false
    - name: nodejs 10
      shell: curl -sL https://deb.nodesource.com/setup_10.x | bash -
       
    - name: Install nodejs
      apt: 
          name: nodejs
          state: present
          allow_unauthenticated: yes

    - name: Installing npm
      command: npm install --production

    - name: Creating new folder
      file: 
        path: /tmp/ghost
        state: directory
        mode: 0755

    - name: Download
      get_url:
        url: https://ghost.org/zip/ghost-latest.zip
        dest: /tmp/ghost.zip
        validate_certs: no

    - name: Create database
      mysql_db: 
        name: ghost
        state: present
        encoding: utf8

    - name: Create database user
      mysql_user: 
        name: ghost
        password: ghost
        priv: ghost.*:ALL

    - name: Download and unzip Ghost
      unarchive: 
        src: /tmp/ghost.zip
        dest: /tmp/ghost
        remote_src: yes
        validate_certs: no
        # extra_opts: [--strip-components=1]

    - name: stat ghost
      stat: path=/tmp/ghost/ghost.zip
      register: ghost_stat

    - name: Move ghost.zip to ghost
      command: mv /tmp/ghost /var/www/html
      when: ghost_stat.stat.exists

    # - name: Move files
    #   command: mv /tmp/ghost/* /var/www/html/

    - name: Change file ownership
      file: 
        path: /var/www/html
        recurse: yes
        owner: www-data
        group: www-data

    - name: Restart apache
      service: 
        name: apache2
        state: restarted   
        
    - name: npm start
      command: npm start --production  
  # -name: Directory creation
       
  # -name: Moving file
  # -name: Installing npm
  # -name: NodeJs Download
  #   shell:
  # -name: NodeJs Installation
  # -name: npm Installation
  # -name: Screen nginx Installation
  # -name: File editing (nano)
  # -name: Restart of nginx
  # -name: npm start --production


 
  
  # - name: Creating database
  #   mysql_db:
  #     name:
  #     state: present
  #     encoding: utf8
  # - name: Creating database user
  #   mysql_user:
  #     name: 
  #     password: 
  #     priv:  
  # - name: Restarting nginx
  #   service:
  #     name: nginx
  #     state: restarted
  # - name: Downloading Composer
  #   get_url:
  #     url: https://getcomposer.org/installer
  #     dest: /tmp/installer
  #     validate_certs: false
  # - name: Installing Composer
  #   shell: cat /tmp/installer | php -- --install-dir=/
  /local/bin --disable-tls
  #   args:
  #     creates: /usr/local/bin/composer
  # - name: Rename composer.phar to composer
  #   shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  #   args:
  #     creates: /usr/local/bin/composer
  # 
